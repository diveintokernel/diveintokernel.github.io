<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dive Into Kernel</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://dik.laoqinren.net/</link>
    <atom:link href="http://dik.laoqinren.net/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 03 Nov 2014 06:47:15 +0800</pubDate>
    <lastBuildDate>Mon, 03 Nov 2014 06:47:15 +0800</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Welcome to Dive Into Kernel(DIK)!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve --watch&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 02 Nov 2014 10:38:35 +0800</pubDate>
        <link>http://dik.laoqinren.net/welcome/2014/11/02/welcome-to-DIK.html</link>
        <guid isPermaLink="true">http://dik.laoqinren.net/welcome/2014/11/02/welcome-to-DIK.html</guid>
        
        
        <category>welcome</category>
        
      </item>
    
      <item>
        <title>How To Wirte Post!</title>
        <description>&lt;p&gt;This sites offers powerful support for code snippets:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The source is: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{% highlight ruby %}
def print_hi(name)
  puts &amp;quot;Hi, #{name}&amp;quot;
end
print_hi(&amp;#39;Tom&amp;#39;)
#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.
{% endhighlight %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result is:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The source is:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{% highlight c %}
static void hisi_restart(enum reboot_mode mode, const char *cmd)
{
        writel_relaxed(0xdeadbeef, base + reboot_offset);

        while (1)
                cpu_do_idle();
}

static int hisi_reboot_probe(struct platform_device *pdev)
{
        struct device_node *np = pdev-&amp;gt;dev.of_node;

        base = of_iomap(np, 0);
        if (!base) {
                WARN(1, &amp;quot;failed to map base address&amp;quot;);
                return -ENODEV;
        }

        if (of_property_read_u32(np, &amp;quot;reboot-offset&amp;quot;, &amp;amp;reboot_offset) &amp;lt; 0) {
                pr_err(&amp;quot;failed to find reboot-offset property\n&amp;quot;);
                return -EINVAL;
        }

        arm_pm_restart = hisi_restart;

        return 0;
}
{% endhighlight %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result is:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hisi_restart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reboot_mode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;writel_relaxed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xdeadbeef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reboot_offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;cpu_do_idle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hisi_reboot_probe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;platform_device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pdev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of_node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of_iomap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;WARN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;failed to map base address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ENODEV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of_property_read_u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;reboot-offset&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reboot_offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;pr_err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;failed to find reboot-offset property&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EINVAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;arm_pm_restart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hisi_restart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;assembly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The source is:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{% highlight asm %}
/* Determine validity of the r2 atags pointer.  The heuristic requires
 * that the pointer be aligned, in the first 16k of physical RAM and
 * that the ATAG_CORE marker is first and present.  If CONFIG_OF_FLATTREE
 * is selected, then it will also accept a dtb pointer.  Future revisions
 * of this function may be more lenient with the physical address and
 * may also be able to move the ATAGS block if necessary.
 *
 * Returns:
 *  r2 either valid atags pointer, valid dtb pointer, or zero
 *  r5, r6 corrupted
 */
__vet_atags:
        tst     r2, #0x3                        @ aligned?
        bne     1f  

        ldr     r5, [r2, #0] 
#ifdef CONFIG_OF_FLATTREE
        ldr     r6, =OF_DT_MAGIC                @ is it a DTB?
        cmp     r5, r6
        beq     2f  
#endif
        cmp     r5, #ATAG_CORE_SIZE             @ is first tag ATAG_CORE?
        cmpne   r5, #ATAG_CORE_SIZE_EMPTY
        bne     1f  
        ldr     r5, [r2, #4] 
        ldr     r6, =ATAG_CORE
        cmp     r5, r6
        bne     1f  

2:      ret     lr                              @ atag/dtb pointer is ok

1:      mov     r2, #0
        ret     lr  
ENDPROC(__vet_atags)

{% endhighlight %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result is:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asm&quot; data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;err&quot;&gt;/*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Determine&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;validity&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;atags&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pointer.&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;heuristic&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;requires&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;aligned&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;physical&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RAM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;and&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ATAG_CORE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;marker&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;present.&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CONFIG_OF_FLATTREE&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;selected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;also&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;accept&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;dtb&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pointer.&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;Future&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;revisions&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;may&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;lenient&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;physical&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;and&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;may&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;also&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;able&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;move&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ATAGS&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;necessary.&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;Returns:&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;either&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;valid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;atags&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;valid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;dtb&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;zero&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;nf&quot;&gt;r5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r6&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;corrupted&lt;/span&gt;
 &lt;span class=&quot;err&quot;&gt;*/&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;__vet_atags:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;tst&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#0x3                        @ aligned?&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;bne&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;f&lt;/span&gt;  

        &lt;span class=&quot;no&quot;&gt;ldr&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#0] &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#ifdef CONFIG_OF_FLATTREE&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;ldr&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;OF_DT_MAGIC&lt;/span&gt;                &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DTB&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;cmp&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r6&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;beq&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;f&lt;/span&gt;  
&lt;span class=&quot;c&quot;&gt;#endif&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;cmp&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#ATAG_CORE_SIZE             @ is first tag ATAG_CORE?&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;cmpne&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;r5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#ATAG_CORE_SIZE_EMPTY&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;bne&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;f&lt;/span&gt;  
        &lt;span class=&quot;no&quot;&gt;ldr&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#4] &lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;ldr&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ATAG_CORE&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;cmp&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r6&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;bne&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;f&lt;/span&gt;  

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;no&quot;&gt;ret&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;lr&lt;/span&gt;                              &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;atag&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;dtb&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pointer&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ok&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;1:&lt;/span&gt;      &lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#0&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;ret&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;lr&lt;/span&gt;  
&lt;span class=&quot;no&quot;&gt;ENDPROC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;__vet_atags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 01 Nov 2014 10:38:35 +0800</pubDate>
        <link>http://dik.laoqinren.net/guide/2014/11/01/how-to-write-post.html</link>
        <guid isPermaLink="true">http://dik.laoqinren.net/guide/2014/11/01/how-to-write-post.html</guid>
        
        
        <category>guide</category>
        
      </item>
    
  </channel>
</rss>
